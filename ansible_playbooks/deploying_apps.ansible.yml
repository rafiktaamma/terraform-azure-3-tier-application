# Playbook to deploy backend
- hosts: business_app
  gather_facts: true
  become_user: azureuser
  vars_files:
    - vars/main.yml
  vars:
    DB_HOST: "{{ hostvars['data_app'].ansible_host }}"
    DB_USERNAME: "rafiktaamma"
    DB_PASSWORD: "{{lookup('env', 'DB_PASSWORD')}}"
    DB_PORT: 3306
  tasks:

 #Just for Debuging puposes
  - name: Print PATH variable
    ansible.builtin.command:
      cmd: echo $PATH
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ ansible_env.NODE_HOME }}"
    register: path_output

  - name: Debug printed PATH variable
    ansible.builtin.debug:
      msg: "Printed PATH variable: {{ path_output.stdout }}"




  - name: Clone a github repository
    git:
      repo: https://github.com/rafiktaamma/3_tier_app.git
      dest: /home/azureuser/repos/
      clone: yes
      update: yes

  - name: Check if DB is accesible
    wait_for:
      host: "{{DB_HOST}}"
      port: 3306
      state: started
      delay: 0
      timeout: 1
    ignore_errors: yes

  - name: "Instaling Npm dependecies" 
    shell: "cd $HOME/repos/backend && npm install"
    args:
      executable: /bin/bash
    register: version
    become_user: azureuser
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ansible_env.NODE_HOME}}"
    tags:
      - npm_install

  - name: "Instaling pm2 globaly" 
    shell: "npm install pm2@latest -g"
    args:
      executable: /bin/bash
    become_user: azureuser
    become: yes
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ansible_env.NODE_HOME}}"
    tags:
      - npm_install 

    # New tasks
  - name: Delete the application from PM2
    command: pm2 delete index
    ignore_errors: yes
    changed_when: False
    become_user: azureuser
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ansible_env.NODE_HOME}}"

  - name: Start the application with PM2
    command: pm2 start /home/azureuser/repos/backend/index.js
    become_user: azureuser
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ansible_env.NODE_HOME}}"
      DB_HOST: "{{DB_HOST}}"
      DB_USERNAME: "{{DB_USERNAME}}"
      DB_PASSWORD: "{{DB_PASSWORD}}"
      PORT: "{{DB_PORT}}"

  - name: Set PM2 to start on boot
    command: pm2 startup systemd
    become_user: root
    become: yes
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ansible_env.NODE_HOME}}"
    ignore_errors: yes

  - name: Run the command from the output
    shell:   env PATH=$PATH:/home/azureuser/.nvm/versions/node/v16.20.2/bin pm2 startup systemd -u azureuser --hp /home/azureuser
    become: yes
    become_user: root
    register: output
    tags:
    - service
    ignore_errors: yes
 
  - debug:
      var: output.stdout_lines
    tags:
    - service

  - name: Save the PM2 process list and corresponding environments
    command: pm2 save
    become_user: azureuser
    environment:
      PATH: "{{ ansible_env.PATH }}:{{ansible_env.NODE_HOME}}"
      
  - name: Start the service with systemctl
    service:
      name: pm2-azureuser
      state: started

  - name: Check the status of the systemd unit
    command: systemctl status pm2-azureuser
    register: result
    changed_when: False

  - debug: var=result.stdout_lines


