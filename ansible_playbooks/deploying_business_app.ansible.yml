# Playbook to deploy backend
- hosts: data_app
  gather_facts: true
  tasks:
    - name: Save private IP address to a fact
      set_fact:
        data_app_private_ip: "{{ ansible_default_ipv4.address }}"
      # This task is to retireve the private ip of the data_app . as the communcation between VM in cloud guru needs to pass by the private network 

- hosts: business_app
  gather_facts: true
  vars_files:
    - vars/main.yml
  vars:
    DB_HOST: "{{ hostvars['data_app'].data_app_private_ip }}"
    password: "{{ lookup('env', 'DB_PASSWORD') }}"  # Password is retrieved from the environement variable 
    node_version_path: "{{ ansible_env.HOME }}/.nvm/versions/node/{{ NODEJS_VERSION }}/bin"
    app_dir: "/home/{{ ansible_user }}/repos/backend"
    app_service_name: "backend_app" 
    app_port: "{{business_app_port}}"   
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ node_version_path }}"
  tasks:

    - name: Execute printenv command
      shell: printenv
      register: env_output

    - name: Display environment variables
      debug:
        msg: "{{ env_output.stdout_lines }}"

    - name: Clone a GitHub repository
      git:
        repo: https://github.com/rafiktaamma/3_tier_app.git
        dest: "/home/{{ ansible_user }}/repos/"
        clone: yes
        update: yes

    - name: Allow 3306/tcp through UFW
      become: yes
      ufw:
        rule: allow
        port: '3306'
        proto: tcp

    - name: Check if DB is accesible
      wait_for:
        host: "{{ DB_HOST }}"
        port: 3306
        timeout: 10
        state: started
      register: result

    - name: Install Node.js dependencies
      npm:
        path: "{{ app_dir }}"
        state: present

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes
        state: present

    - name: Set up PM2 ecosystem file
      copy:
        dest: "{{ app_dir }}/ecosystem.config.cjs"
        content: |
          module.exports = {
            apps: [{
              name: "{{ app_service_name }}",
              script: "./repos/backend/index.js",
              env: {
                NODE_ENV: "production",
                DB_HOST: "{{ DB_HOST }}",
                DB_USERNAME: "{{ mysql_users[0].name }}",
                DB_PASSWORD: "{{ lookup('env', 'DB_PASSWORD') }}",
                DB_PORT: "{{ db_port }}",
                DB_NAME: "{{ mysql_databases[0].name }}",
                PORT: "{{ app_port }}"
              }
            }]
          }

    - name: Start the Node.js application with PM2
      shell: pm2 start {{ app_dir }}/ecosystem.config.cjs --env production
      args:
        creates: /root/.pm2/dump.pm2

    - name: Save the PM2 process list
      shell: pm2 save

    - name: Set up PM2 to start on reboot
      become: yes
      command: sudo env PATH=$PATH:{{ node_version_path }} pm2 startup systemd -u {{ ansible_user }} --hp /home/{{ ansible_user }}
      register: pm2_startup

    - name: Ensure firewall allows traffic on app port
      become: yes
      ufw:
        rule: allow
        port: '{{ app_port }}'
        proto: tcp

    - name: Check if the application is running
      wait_for:
        host: 127.0.0.1
        port: '{{ app_port }}'
        timeout: 10
        state: started
      register: result